{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lala1\\\\Desktop\\\\my chat(copy)\\\\Chatbase-master\\\\src\\\\components\\\\chatlist.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport './chatlist.css';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { baseUrl } from '../base';\nimport { useHistory } from 'react-router-dom';\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatlist(props) {\n  _s();\n  const history = useHistory();\n  const username = props.username;\n  if (!username) {\n    history.push(\"/login\");\n  }\n  const [chats, setChats] = useState([]);\n  const [msg, setMsg] = useState('');\n  const [tables, setTables] = useState([]);\n  const base = baseUrl;\n  const onButtonClick = id => {\n    props.setChatId(id);\n  };\n  useEffect(() => {\n    axios.get(base + \"/chatlist\", {\n      params: {\n        user: username\n      }\n    }).then(response => {\n      setChats(response.data);\n\n      // Fetch the latest message for each chat\n      const fetchLatestMessages = async () => {\n        const chatsWithMessages = await Promise.all(response.data.map(async chat => {\n          const chatMessages = await axios.get(base + \"/chat\", {\n            params: {\n              table_name: chat.table_id\n            }\n          });\n          const latestMessage = chatMessages.data[chatMessages.data.length - 1];\n          return {\n            ...chat,\n            latestMessage: latestMessage ? latestMessage.msg : \"No messages\"\n          };\n        }));\n        setChats(chatsWithMessages);\n      };\n      fetchLatestMessages();\n    });\n  }, []);\n  useEffect(() => {\n    if (tables.length > 0) {\n      if (tables.includes(username + msg) || tables.includes(msg + username)) {\n        props.setChatId(tables.includes(username + msg) ? username + msg : msg + username);\n      } else {\n        console.log(\"tables: \" + tables);\n        axios.post(base + \"/createchat\", {\n          touser: msg,\n          curuser: username\n        }).then(() => {\n          alert(\"success\");\n        });\n        alert(\"table created... refresh page to view changes\");\n      }\n    }\n  }, [tables]);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    // axios.post(base + \"/createchat\", {\n    //     touser: msg,\n    //     curuser: username,\n\n    // }).then(() => {\n    //     alert(\"success\");\n    // });\n    setTables(tables => [...tables, msg]);\n    chats.map(x => {\n      setTables(tables => [...tables, x.table_id]);\n    });\n  };\n  useEffect(() => {\n    axios.get(base + \"/chatlist\", {\n      params: {\n        user: username\n      }\n    }).then(response => {\n      setChats(response.data);\n    });\n  }, []);\n\n  // const logout = ()=>{\n  //     axios.get(base+\"/logout\").then(response =>{\n  //         console.log(response.data)\n  //         history.replace(\"/login\");\n  //     })\n  // };\n\n  const nulldisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter user name to chat\",\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 13\n  }, this);\n\n  // Inside the Chatlist component\n  const chatdisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add User Name To Start Chat\",\n        className: \"chatInput\",\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chatBtn add-user-btn\",\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {\n          className: \"add-user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-list\",\n      children: chats.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatUser\",\n            onClick: () => onButtonClick(data.table_id),\n            children: data.user1 === username ? data.user2 : data.user1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"latestMessages\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"last-message\",\n              children: data.latestMessage1 === 'No messages' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"no-msg\",\n                children: \"No messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 82\n              }, this) : data.latestMessage1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat-delete-btn\",\n          onClick: () => handleDeleteChat(data.table_id, data.table_id),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n            className: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 110\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, data.table_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    axios.get(base + \"/chatlist\", {\n      params: {\n        user: username\n      }\n    }).then(async response => {\n      const chatsWithMessages = await Promise.all(response.data.map(async chat => {\n        const chatMessages1 = await axios.get(base + \"/chat\", {\n          params: {\n            table_name: chat.table_id,\n            user: chat.user1\n          }\n        });\n        const chatMessages2 = await axios.get(base + \"/chat\", {\n          params: {\n            table_name: chat.table_id,\n            user: chat.user2\n          }\n        });\n        const latestMessage1 = chatMessages1.data[chatMessages1.data.length - 1];\n        return {\n          ...chat,\n          latestMessage1: latestMessage1 ? latestMessage1.msg : \"No messages\"\n        };\n      }));\n      setChats(chatsWithMessages);\n    });\n  }, []);\n\n  // Handle delete chat button click\n  // Handle delete chat button click\n  const handleDeleteChat = (tableId, tableName) => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this chat?\");\n    if (confirmDelete) {\n      axios.post(base + \"/deletechat\", {\n        table_name: tableName\n      }).then(response => {\n        console.log(response.data);\n        // Clear user session data\n        axios.get(base + \"/logout\").then(logoutResponse => {\n          console.log(logoutResponse.data);\n          // Perform any necessary updates or refreshes\n        }).catch(logoutError => {\n          console.error(logoutError);\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  // Render chatlist entries with a delete button/icon\n\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chats.map(data => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"chatusername\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatUser\",\n        onClick: () => onButtonClick(data.table_id),\n        children: data.user1 === username ? data.user2 : data.user1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chatdisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatlist, \"DqpbvIgVhkPRqikXt3qr1b9tkZM=\", false, function () {\n  return [useHistory];\n});\n_c = Chatlist;\nexport default Chatlist;\nvar _c;\n$RefreshReg$(_c, \"Chatlist\");","map":{"version":3,"names":["axios","React","Component","useEffect","useRef","useState","AccountCircleIcon","LogoutIcon","PersonSearchIcon","baseUrl","useHistory","Route","DeleteOutlineIcon","PersonAddAltIcon","jsxDEV","_jsxDEV","Chatlist","props","_s","history","username","push","chats","setChats","msg","setMsg","tables","setTables","base","onButtonClick","id","setChatId","get","params","user","then","response","data","fetchLatestMessages","chatsWithMessages","Promise","all","map","chat","chatMessages","table_name","table_id","latestMessage","length","includes","console","log","post","touser","curuser","alert","handleSubmit","evt","preventDefault","x","nulldisplay","children","onSubmit","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","chatdisplay","className","onClick","user1","user2","latestMessage1","handleDeleteChat","chatMessages1","chatMessages2","tableId","tableName","confirmDelete","window","confirm","logoutResponse","catch","logoutError","error","_c","$RefreshReg$"],"sources":["C:/Users/lala1/Desktop/my chat(copy)/Chatbase-master/src/components/chatlist.js"],"sourcesContent":["import axios from 'axios';\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport './chatlist.css';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport {baseUrl} from '../base';\nimport {useHistory} from 'react-router-dom';\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\nfunction Chatlist(props) {\n    const history = useHistory();\n    const username = props.username;\n    if(!username){\n        history.push(\"/login\");\n    }\n    const [chats, setChats] = useState([]);\n    const [msg, setMsg] = useState('');\n    const [tables, setTables] = useState([]);\n    const base = baseUrl;\n    const onButtonClick=(id)=>{\n        props.setChatId(id);\n    }\n\n    useEffect(() => {\n        axios.get(base + \"/chatlist\", {\n            params: {\n                user: username,\n            }\n        }).then(response => {\n            setChats(response.data);\n    \n            // Fetch the latest message for each chat\n            const fetchLatestMessages = async () => {\n                const chatsWithMessages = await Promise.all(\n                    response.data.map(async (chat) => {\n                        const chatMessages = await axios.get(base + \"/chat\", {\n                            params: {\n                                table_name: chat.table_id,\n                            }\n                        });\n                        const latestMessage = chatMessages.data[chatMessages.data.length - 1];\n                        return {\n                            ...chat,\n                            latestMessage: latestMessage ? latestMessage.msg : \"No messages\",\n                        };\n                    })\n                );\n                setChats(chatsWithMessages);\n            };\n    \n            fetchLatestMessages();\n        });\n    }, []);\n    \n\n    useEffect(()=>{\n        if (tables.length>0)\n        {\n            if(tables.includes(username+msg)||tables.includes(msg+username))\n            {   \n                props.setChatId(tables.includes(username+msg)?username+msg:msg+username);\n            }\n            else{\n                console.log(\"tables: \"+tables);\n                axios.post(base + \"/createchat\", {\n                    touser: msg,\n                    curuser:username,\n        \n                }).then(() => {\n                    alert(\"success\");\n                });\n                alert(\"table created... refresh page to view changes\");\n            }\n\n        }\n        \n    },[tables]);\n\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // axios.post(base + \"/createchat\", {\n        //     touser: msg,\n        //     curuser: username,\n\n        // }).then(() => {\n        //     alert(\"success\");\n        // });\n        setTables(tables=>[...tables,msg]);\n        chats.map(x=> {setTables(tables => [...tables,x.table_id])});\n    }\n    useEffect(() => {\n        axios.get(base + \"/chatlist\", {\n            params: {\n                user: username,\n            }\n        }).then(response => {\n            setChats(response.data);\n        });\n    }, []);\n\n    // const logout = ()=>{\n    //     axios.get(base+\"/logout\").then(response =>{\n    //         console.log(response.data)\n    //         history.replace(\"/login\");\n    //     })\n    // };\n\n\n    const nulldisplay =\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" placeholder=\"Enter user name to chat\" onChange={e => setMsg(e.target.value)}/>\n                    <button type=\"submit\">Chat</button>\n                </form>\n            </div>;\n\n    // Inside the Chatlist component\nconst chatdisplay = (\n    <div>\n      <h3>\n        <AccountCircleIcon />\n        {username}\n      </h3>\n      \n      <form onSubmit={handleSubmit} className=\"add-contact-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Add User Name To Start Chat\"\n          className=\"chatInput\"\n          onChange={(e) => setMsg(e.target.value)}\n        />\n        <button type=\"submit\" className=\"chatBtn add-user-btn\">\n          Add <PersonAddAltIcon  className='add-user-icon'/>{\" \"}\n        </button>\n      </form>\n      <div className='contacts-list'>\n      {chats.map((data) => (\n        <div className=\"chat-entry\" key={data.table_id}>\n          <div className='contact-link'>\n          <button className=\"chatUser\" onClick={() => onButtonClick(data.table_id)}>\n            {(data.user1 === username) ? data.user2 : data.user1}\n          </button>\n          <div className=\"latestMessages\">\n            <p className='last-message'>{data.latestMessage1 === 'No messages' ? <span className='no-msg'>No messages</span> : data.latestMessage1}</p>\n            {/* <p>{data.latestMessage2}</p> */}\n          </div>\n          </div>\n          <button className=\"chat-delete-btn\" onClick={() => handleDeleteChat(data.table_id, data.table_id)}><DeleteOutlineIcon className='delete-icon' /></button>\n          <br />\n        </div>\n      ))}\n      </div>\n    </div>\n  );\n  \n  useEffect(() => {\n    axios.get(base + \"/chatlist\", {\n      params: {\n        user: username,\n      },\n    }).then(async (response) => {\n      const chatsWithMessages = await Promise.all(\n        response.data.map(async (chat) => {\n          const chatMessages1 = await axios.get(base + \"/chat\", {\n            params: {\n              table_name: chat.table_id,\n              user: chat.user1,\n            },\n          });\n          const chatMessages2 = await axios.get(base + \"/chat\", {\n            params: {\n              table_name: chat.table_id,\n              user: chat.user2,\n            },\n          });\n  \n          const latestMessage1 = chatMessages1.data[chatMessages1.data.length - 1];\n  \n          return {\n            ...chat,\n            latestMessage1: latestMessage1 ? latestMessage1.msg : \"No messages\",\n          };\n        })\n      );\n      setChats(chatsWithMessages);\n    });\n  }, []);\n          \n\n// Handle delete chat button click\n// Handle delete chat button click\nconst handleDeleteChat = (tableId, tableName) => {\n  const confirmDelete = window.confirm(\"Are you sure you want to delete this chat?\");\n  if (confirmDelete) {\n    axios.post(base + \"/deletechat\", { table_name: tableName })\n        .then((response) => {\n            console.log(response.data);\n            // Clear user session data\n            axios.get(base + \"/logout\")\n                .then((logoutResponse) => {\n                    console.log(logoutResponse.data);\n                    // Perform any necessary updates or refreshes\n                })\n                .catch((logoutError) => {\n                    console.error(logoutError);\n                });\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      }\n};\n\n\n// Render chatlist entries with a delete button/icon\n\n    <div>\n       \n        {chats.map(data => (\n            <span className='chatusername'>\n                <button className=\"chatUser\" onClick={() => onButtonClick(data.table_id)}>\n                    {(data.user1 === username) ? data.user2 : data.user1}\n                </button>\n                <br></br>\n            </span>\n        ))}\n    </div>;\n\n\n\n    return (\n        <div>    \n        {chatdisplay}\n        </div>\n    );\n\n}\n\nexport default Chatlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}