{"ast":null,"code":"const globalThis = require(\"../globalThis\");\nconst nextTick = (() => {\n  const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return cb => setTimeout(cb, 0);\n  }\n})();\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\",\n  nextTick\n};","map":{"version":3,"names":["globalThis","require","nextTick","isPromiseAvailable","Promise","resolve","cb","then","setTimeout","module","exports","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType"],"sources":["C:/Users/LA_LA/Desktop/my chat(copy)/Chatbase-master/node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js"],"sourcesContent":["const globalThis = require(\"../globalThis\");\nconst nextTick = (() => {\n  const isPromiseAvailable =\n    typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return cb => setTimeout(cb, 0);\n  }\n})();\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\",\n  nextTick\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,QAAQ,GAAG,CAAC,MAAM;EACtB,MAAMC,kBAAkB,GACtB,OAAOC,OAAO,KAAK,UAAU,IAAI,OAAOA,OAAO,CAACC,OAAO,KAAK,UAAU;EACxE,IAAIF,kBAAkB,EAAE;IACtB,OAAOG,EAAE,IAAIF,OAAO,CAACC,OAAO,CAAC,CAAC,CAACE,IAAI,CAACD,EAAE,CAAC;EACzC,CAAC,MAAM;IACL,OAAOA,EAAE,IAAIE,UAAU,CAACF,EAAE,EAAE,CAAC,CAAC;EAChC;AACF,CAAC,EAAE,CAAC;AAEJG,MAAM,CAACC,OAAO,GAAG;EACfC,SAAS,EAAEX,UAAU,CAACW,SAAS,IAAIX,UAAU,CAACY,YAAY;EAC1DC,qBAAqB,EAAE,IAAI;EAC3BC,iBAAiB,EAAE,aAAa;EAChCZ;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}